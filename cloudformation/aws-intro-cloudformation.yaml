AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS Intro demo using CloudFormation.
Parameters:
  Prefix:
    Type: String
    Default: aws-intro-cf-demo
    Description: AWS Intro CloudFormation demo prefix for all resources.
  Env:
    Type: String
    AllowedValues:
      - dev
      - qa
      - prod
    Default: dev
    Description: AWS Intro CloudFormation demo env for all resources.
  InstanceType:
    Description: EC2 instance type.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
    ConstraintDescription: A valid EC2 instance type.
  KeyName:
    Description: An existing EC2 KeyPair.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: An existing EC2 KeyPair.
  AmiId:
    Description: An existing AMI.
    Type: String
    Default: ami-00035f41c82244dab
    ConstraintDescription: An existing AMI id.
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.60.0.0/16
      Tags:
        - Key: CloudFormation
          Value: !Ref 'AWS::StackId'
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.60.1.0/24
      Tags:
        - Key: CloudFormation
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: CloudFormation
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: CloudFormation
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  IPAddress:
    Type: 'AWS::EC2::EIP'
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: !Ref MyEC2Instance
  SubnetSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join ["", [!Ref Prefix, "-", !Ref Env, "-vpc-app-subnet-sg"]]
      VpcId: !Ref VPC
      GroupDescription: SSH access.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref MyEC2IamInstanceProfile
      Tags:
        - Key: CloudFormation
          Value: !Ref 'AWS::StackId'
      NetworkInterfaces:
        - GroupSet:
            - !Ref SubnetSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref Subnet
  MyEC2IamInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
Outputs:
  URL:
    Value: !Join
      - ''
      - - !GetAtt
          - MyEC2Instance
          - PublicIp
